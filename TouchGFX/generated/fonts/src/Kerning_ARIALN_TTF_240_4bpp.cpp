#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_ARIALN_TTF_240_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE =
{
    { 0x0041, -11 },  // (First char = [0x0041, A], Second char = [0x0020, space], Kerning dist = -11)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0020, space], Kerning dist = -7)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x0020, space], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0020, space], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0020, space], Kerning dist = -3)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -11)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -11)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x0059, -18 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -18)
    { 0x0046, -22 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -22)
    { 0x0050, -25 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -25)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -22)
    { 0x0056, -18 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -18)
    { 0x0057, -11 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0059, -25 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -25)
    { 0x0072, -11 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0076, -14 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -14)
    { 0x0077, -11 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0079, -14 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -14)
    { 0x0031, -14 },  // (First char = [0x0031, one], Second char = [0x0031, one], Kerning dist = -14)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x003A, colon], Kerning dist = -22)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x003A, colon], Kerning dist = -7)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x003A, colon], Kerning dist = -3)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x003A, colon], Kerning dist = -11)
    { 0x0020, -11 },  // (First char = [0x0020, space], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0046, -11 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0050, -14 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -14)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -14)
    { 0x0056, -14 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -14)
    { 0x0057, -7 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -7)
    { 0x0059, -14 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -14)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0020, -3 },  // (First char = [0x0020, space], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0041, -14 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -14)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -14)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0041, -14 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -14)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -14)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0041, -7 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -7)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -14)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0020, -3 },  // (First char = [0x0020, space], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0041, -14 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -14)
    { 0x004C, -14 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -14)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -22)
    { 0x0056, -14 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -14)
    { 0x0057, -7 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -7)
    { 0x0059, -14 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -14)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -22)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -22)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -11)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0059, -18 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -18)
    { 0x0066, -3 },  // (First char = [0x0066, f], Second char = [0x0066, f], Kerning dist = -3)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0069, i], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0069, i], Kerning dist = -3)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x0069, i], Kerning dist = -7)
    { 0x0054, -22 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -22)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -11)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0059, -18 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -18)
    { 0x0059, -14 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -14)
    { 0x0059, -18 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -18)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -7)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -7)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0054, -17 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -17)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -7)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -7)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -11)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -11)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -11)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -3)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -7)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -11)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -7)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0079, y], Kerning dist = -2)
};
